[
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "pairBase",
        "type": "address"
      }
    ],
    "name": "getMarketInfo",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "pairBase",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "longQty",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "shortQty",
            "type": "uint256"
          },
          {
            "internalType": "uint128",
            "name": "lpLongAvgPrice",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "lpShortAvgPrice",
            "type": "uint128"
          },
          {
            "internalType": "int256",
            "name": "fundingFeeRate",
            "type": "int256"
          }
        ],
        "internalType": "struct ITradingReader.MarketInfo",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address[]",
        "name": "pairBases",
        "type": "address[]"
      }
    ],
    "name": "getMarketInfos",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "pairBase",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "longQty",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "shortQty",
            "type": "uint256"
          },
          {
            "internalType": "uint128",
            "name": "lpLongAvgPrice",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "lpShortAvgPrice",
            "type": "uint128"
          },
          {
            "internalType": "int256",
            "name": "fundingFeeRate",
            "type": "int256"
          }
        ],
        "internalType": "struct ITradingReader.MarketInfo[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      }
    ],
    "name": "getPendingTrade",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "tokenIn",
            "type": "address"
          },
          {
            "internalType": "uint96",
            "name": "amountIn",
            "type": "uint96"
          },
          {
            "internalType": "uint128",
            "name": "price",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "qty",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "stopLoss",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "takeProfit",
            "type": "uint128"
          },
          {
            "internalType": "address",
            "name": "pairBase",
            "type": "address"
          },
          {
            "internalType": "uint24",
            "name": "broker",
            "type": "uint24"
          },
          {
            "internalType": "bool",
            "name": "isLong",
            "type": "bool"
          },
          {
            "internalType": "uint32",
            "name": "timestamp",
            "type": "uint32"
          },
          {
            "internalType": "uint128",
            "name": "blockNumber",
            "type": "uint128"
          }
        ],
        "internalType": "struct ITrading.PendingTrade",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      }
    ],
    "name": "getPositionByHashV2",
    "outputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "positionHash",
            "type": "bytes32"
          },
          {
            "internalType": "string",
            "name": "pair",
            "type": "string"
          },
          {
            "internalType": "address",
            "name": "pairBase",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "marginToken",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "isLong",
            "type": "bool"
          },
          {
            "internalType": "uint96",
            "name": "margin",
            "type": "uint96"
          },
          {
            "internalType": "uint128",
            "name": "qty",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "entryPrice",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "stopLoss",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "takeProfit",
            "type": "uint128"
          },
          {
            "internalType": "uint96",
            "name": "openFee",
            "type": "uint96"
          },
          {
            "internalType": "uint96",
            "name": "executionFee",
            "type": "uint96"
          },
          {
            "internalType": "int256",
            "name": "fundingFee",
            "type": "int256"
          },
          {
            "internalType": "uint32",
            "name": "timestamp",
            "type": "uint32"
          },
          {
            "internalType": "uint96",
            "name": "holdingFee",
            "type": "uint96"
          }
        ],
        "internalType": "struct ITradingReader.Position",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "pairBase",
        "type": "address"
      }
    ],
    "name": "getPositionsV2",
    "outputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "positionHash",
            "type": "bytes32"
          },
          {
            "internalType": "string",
            "name": "pair",
            "type": "string"
          },
          {
            "internalType": "address",
            "name": "pairBase",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "marginToken",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "isLong",
            "type": "bool"
          },
          {
            "internalType": "uint96",
            "name": "margin",
            "type": "uint96"
          },
          {
            "internalType": "uint128",
            "name": "qty",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "entryPrice",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "stopLoss",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "takeProfit",
            "type": "uint128"
          },
          {
            "internalType": "uint96",
            "name": "openFee",
            "type": "uint96"
          },
          {
            "internalType": "uint96",
            "name": "executionFee",
            "type": "uint96"
          },
          {
            "internalType": "int256",
            "name": "fundingFee",
            "type": "int256"
          },
          {
            "internalType": "uint32",
            "name": "timestamp",
            "type": "uint32"
          },
          {
            "internalType": "uint96",
            "name": "holdingFee",
            "type": "uint96"
          }
        ],
        "internalType": "struct ITradingReader.Position[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address[]",
        "name": "tokens",
        "type": "address[]"
      }
    ],
    "name": "traderAssets",
    "outputs": [
      {
        "components": [
          {
            "internalType": "enum ITradingReader.AssetPurpose",
            "name": "purpose",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "token",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "internalType": "struct ITradingReader.TraderAsset[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
]
