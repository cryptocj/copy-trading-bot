[
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      },
      {
        "internalType": "uint256",
        "name": "minRequiredLeverage",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "newLeverage",
        "type": "uint256"
      }
    ],
    "name": "BelowDegenModeMinLeverage",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      },
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "InsufficientMarginAmount",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      },
      {
        "internalType": "uint128",
        "name": "entryPrice",
        "type": "uint128"
      },
      {
        "internalType": "uint128",
        "name": "newStopLoss",
        "type": "uint128"
      }
    ],
    "name": "InvalidStopLoss",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "fee",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "InvalidUpdateFee",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "MarketClosed",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NonexistentTrade",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "pairBase",
        "type": "address"
      }
    ],
    "name": "PairClosed",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "operator",
        "type": "address"
      }
    ],
    "name": "UnauthorizedOperation",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "token",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "FundingFeeAddLiquidity",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      },
      {
        "components": [
          {
            "internalType": "address",
            "name": "pairBase",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "isLong",
            "type": "bool"
          },
          {
            "internalType": "address",
            "name": "tokenIn",
            "type": "address"
          },
          {
            "internalType": "uint96",
            "name": "amountIn",
            "type": "uint96"
          },
          {
            "internalType": "uint128",
            "name": "qty",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "price",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "stopLoss",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "takeProfit",
            "type": "uint128"
          },
          {
            "internalType": "uint24",
            "name": "broker",
            "type": "uint24"
          }
        ],
        "indexed": false,
        "internalType": "struct IBook.OpenDataInput",
        "name": "trade",
        "type": "tuple"
      }
    ],
    "name": "MarketPendingTrade",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "beforeMargin",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "margin",
        "type": "uint256"
      }
    ],
    "name": "UpdateMargin",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "oldSl",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "sl",
        "type": "uint256"
      }
    ],
    "name": "UpdateTradeSl",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "oldTp",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "tp",
        "type": "uint256"
      }
    ],
    "name": "UpdateTradeTp",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      },
      {
        "internalType": "uint96",
        "name": "amount",
        "type": "uint96"
      }
    ],
    "name": "addMargin",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32[]",
        "name": "tradeHashes",
        "type": "bytes32[]"
      }
    ],
    "name": "batchCloseTrade",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      }
    ],
    "name": "closeTrade",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "pairBase",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "isLong",
            "type": "bool"
          },
          {
            "internalType": "address",
            "name": "tokenIn",
            "type": "address"
          },
          {
            "internalType": "uint96",
            "name": "amountIn",
            "type": "uint96"
          },
          {
            "internalType": "uint128",
            "name": "qty",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "price",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "stopLoss",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "takeProfit",
            "type": "uint128"
          },
          {
            "internalType": "uint24",
            "name": "broker",
            "type": "uint24"
          }
        ],
        "internalType": "struct IBook.OpenDataInput",
        "name": "data",
        "type": "tuple"
      }
    ],
    "name": "openMarketTrade",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "pairBase",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "isLong",
            "type": "bool"
          },
          {
            "internalType": "address",
            "name": "tokenIn",
            "type": "address"
          },
          {
            "internalType": "uint96",
            "name": "amountIn",
            "type": "uint96"
          },
          {
            "internalType": "uint128",
            "name": "qty",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "price",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "stopLoss",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "takeProfit",
            "type": "uint128"
          },
          {
            "internalType": "uint24",
            "name": "broker",
            "type": "uint24"
          }
        ],
        "internalType": "struct IBook.OpenDataInput",
        "name": "data",
        "type": "tuple"
      }
    ],
    "name": "openMarketTradeETH",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      }
    ],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "pairBase",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "isLong",
            "type": "bool"
          },
          {
            "internalType": "address",
            "name": "tokenIn",
            "type": "address"
          },
          {
            "internalType": "uint96",
            "name": "amountIn",
            "type": "uint96"
          },
          {
            "internalType": "uint128",
            "name": "qty",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "price",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "stopLoss",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "takeProfit",
            "type": "uint128"
          },
          {
            "internalType": "uint24",
            "name": "broker",
            "type": "uint24"
          }
        ],
        "internalType": "struct IBook.OpenDataInput",
        "name": "data",
        "type": "tuple"
      },
      {
        "internalType": "bytes[]",
        "name": "priceUpdateData",
        "type": "bytes[]"
      }
    ],
    "name": "openMarketTradeWithPyth",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      }
    ],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "pairBase",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "isLong",
            "type": "bool"
          },
          {
            "internalType": "address",
            "name": "tokenIn",
            "type": "address"
          },
          {
            "internalType": "uint96",
            "name": "amountIn",
            "type": "uint96"
          },
          {
            "internalType": "uint128",
            "name": "qty",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "price",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "stopLoss",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "takeProfit",
            "type": "uint128"
          },
          {
            "internalType": "uint24",
            "name": "broker",
            "type": "uint24"
          }
        ],
        "internalType": "struct IBook.OpenDataInput",
        "name": "data",
        "type": "tuple"
      },
      {
        "internalType": "uint96",
        "name": "extraFee",
        "type": "uint96"
      },
      {
        "internalType": "bytes[]",
        "name": "priceUpdateData",
        "type": "bytes[]"
      }
    ],
    "name": "openMarketTradeWithPythAndExtraFee",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      }
    ],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "lpReceiveFundingFeeUsd",
        "type": "uint256"
      }
    ],
    "name": "settleLpFundingFee",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      },
      {
        "internalType": "uint128",
        "name": "stopLoss",
        "type": "uint128"
      }
    ],
    "name": "updateTradeSl",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      },
      {
        "internalType": "uint128",
        "name": "takeProfit",
        "type": "uint128"
      }
    ],
    "name": "updateTradeTp",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      },
      {
        "internalType": "uint128",
        "name": "takeProfit",
        "type": "uint128"
      },
      {
        "internalType": "uint128",
        "name": "stopLoss",
        "type": "uint128"
      }
    ],
    "name": "updateTradeTpAndSl",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
]
